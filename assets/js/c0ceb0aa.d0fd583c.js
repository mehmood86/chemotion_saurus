"use strict";(self.webpackChunkchemotion_saurus=self.webpackChunkchemotion_saurus||[]).push([[4413],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?o.createElement(h,a(a({ref:t},d),{},{components:n})):o.createElement(h,a({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5756:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var o=n(7462),i=n(3366),r=(n(7294),n(3905)),a=["components"],s={id:"dev_docker",title:"Dockerized Development",sidebar_label:"Dockerized Development",slug:"DevDocker"},l="Prerequisites",c={unversionedId:"eln/dev_docker",id:"version-1.1.0/eln/dev_docker",title:"Dockerized Development",description:"This guide  assumes you are familiar with basic operation of Git, Docker and a Linux operating system in general. Starting point is a fresh installation of a Linux operating system. This could be either a physical or virtual machine or the Microsoft Subsystem for Linux (untested). Minimal setups could start with 3 GiByte RAM and 20 GByte disk capacity, however it is advisable to assign considerably more ressources. The instructions in this guide have been tested on 64-bit Ubuntu Focal 20.04 (LTS). Depending on your base operating system, the following packages have to be installed:",source:"@site/versioned_docs/version-1.1.0/eln/dev_docker.mdx",sourceDirName:"eln",slug:"/eln/DevDocker",permalink:"/chemotionsaurus/docs/1.1.0/eln/DevDocker",editUrl:"https://github.com/ComPlat/chemotion_saurus/edit/master/versioned_docs/version-1.1.0/eln/dev_docker.mdx",tags:[],version:"1.1.0",lastUpdatedBy:"Danny Truong",lastUpdatedAt:1649919296,formattedLastUpdatedAt:"4/14/2022",frontMatter:{id:"dev_docker",title:"Dockerized Development",sidebar_label:"Dockerized Development",slug:"DevDocker"},sidebar:"version-1.1.0/elnSidebar",previous:{title:"Docker installation",permalink:"/chemotionsaurus/docs/1.1.0/eln/development_docker_installation"},next:{title:"Configuration",permalink:"/chemotionsaurus/docs/1.1.0/eln/settings"}},d=[{value:"docker group",id:"docker-group",children:[],level:3},{value:"Development Mode Setup",id:"development-mode-setup",children:[],level:2},{value:"Production Mode Setup",id:"production-mode-setup",children:[],level:2}],p={toc:d};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"This guide  assumes you are familiar with basic operation of Git, Docker and a Linux operating system in general. Starting point is a fresh installation of a Linux operating system. This could be either a physical or virtual machine or the Microsoft Subsystem for Linux (untested). Minimal setups could start with 3 GiByte RAM and 20 GByte disk capacity, however it is advisable to assign considerably more ressources. The instructions in this guide have been tested on 64-bit Ubuntu Focal 20.04 (LTS). Depending on your base operating system, the following packages have to be installed:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"git"),(0,r.kt)("li",{parentName:"ul"},"docker")),(0,r.kt)("p",null,"The dockerized installation of ChemotionELN expects some folders to have numerical UID:GID of 1000:1000. These are usually the UID and GID of the first unprivileged user on a fresh system. Throughout this guide, we assume the login of this user to be ",(0,r.kt)("inlineCode",{parentName:"p"},"user1"),". Some additional settings can be applied to ease the management of the development system."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Security implications")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"It is assumed that the development system is effectively operated in a safe environment by a single user. The settings proposed here should neither be applied to production machines nor in unsafe environments."))),(0,r.kt)("h3",{id:"docker-group"},"docker group"),(0,r.kt)("p",null,"Operation of the docker subsystem normally requires elevated privileges. Although granting docker access to unprivileged users comes with a security impact, this can be justified on a development system. To grant management privileges for the docker subsystem, run the following commands: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo bash\ngroupadd --system docker\nusermod -G docker user1\nsnap disable docker\nsnap enable docker\nexit\n")),(0,r.kt)("p",null,"Other Linux distributions (Debian, openSUSE) set up their docker instances differently (e.g. the group ",(0,r.kt)("inlineCode",{parentName:"p"},"docker")," may already exist). For these distributions, you may want to replace the ",(0,r.kt)("inlineCode",{parentName:"p"},"snap")," commands by :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"...\nsystemctl restart docker.service\n...\n")),(0,r.kt)("p",null,"In each case, the settings for ",(0,r.kt)("inlineCode",{parentName:"p"},"user1")," will become effective upon the next login. "),(0,r.kt)("h1",{id:"setup"},"Setup"),(0,r.kt)("p",null,"The code for a dockerized installation of ChemotionELN is currently split into two repositories: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ptrxyz/chemotion"},"https://github.com/ptrxyz/chemotion")," containing Dockerfiles and shell scripts for dockerization"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ComPlat/chemotion_ELN"},"https://github.com/ComPlat/chemotion_ELN")," containing the ELN source code")),(0,r.kt)("p",null,"As a developer, you may want to replace one or both repositories by your own fork. In this case, you would have to replace the URLs in the code snippets given below. There are two flavours of dockerized setups of ChemotionELN:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"setup in development mode"),(0,r.kt)("li",{parentName:"ul"},"setup in production mode")),(0,r.kt)("h2",{id:"development-mode-setup"},"Development Mode Setup"),(0,r.kt)("p",null,"The development mode setup is straight forward and requires only a few steps. The setup starts by checking out the containerization scripts in the home directory of ",(0,r.kt)("inlineCode",{parentName:"p"},"user1"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/ptrxyz/chemotion.git\n")),(0,r.kt)("p",null,"The next step is to execute the following code snippet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd chemotion/client-chemotion-dev\n./firstrun.sh\ndocker-compose up\n")),(0,r.kt)("p",null,"As one of the first steps, the script ",(0,r.kt)("inlineCode",{parentName:"p"},"firstrun.sh")," will clone / check out the Chemotion_ELN source code. You would have to adjust the address if you would prefer to work on a fork of the repository. Later on, the script will be prompt you to type ",(0,r.kt)("inlineCode",{parentName:"p"},"continue")," to authorize a potentially destructive initialization of a fresh ChemotionELN database. In total, the code snippet will do the following: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"clone the ChemotionELN source code into a subdirectory ",(0,r.kt)("inlineCode",{parentName:"li"},"src")),(0,r.kt)("li",{parentName:"ul"},"download a specific development container image for ChemotionELN "),(0,r.kt)("li",{parentName:"ul"},"download a PostgreSQL container image and set up database for ChemotionELN"),(0,r.kt)("li",{parentName:"ul"},"set up a ChemotionELN container which mounts the source code of ChemotionELN as a volume and run it in the foreground (to daemonize it and send it to the background, add option ",(0,r.kt)("inlineCode",{parentName:"li"},"-d")," to the last command)")),(0,r.kt)("p",null,"Thus any changes to the ChemotionELN source code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"src")," directory will be reflected in the running instance. The status of the containers can be checked either with ",(0,r.kt)("inlineCode",{parentName:"p"},"docker ps")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"ss -tlpen")," which displays the TCP sockets where processes are listening for connections. ChemotionELN should listen on port 4000 whereas the PostgreSQL database should listen on port 5432."),(0,r.kt)("p",null,"To tear things down, you can issue and the following command (in a different shell but from the same directory):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker-compose down --remove-orphans\n")),(0,r.kt)("p",null,"Additional possiblities to manage docker containers, images, networks and volumes are described in the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/reference/commandline/cli/"},"Docker CLI")," manual. "),(0,r.kt)("h2",{id:"production-mode-setup"},"Production Mode Setup"),(0,r.kt)("p",null,"For normal (non-development) installations in production mode, a pre-built image from DockerHub is used. The goal for this guide is to build our own production mode image instead. This means, a few manual adjustments are necessary, otherwise the pre-built image from DockerHub would be used. The procedure starts with checking out the containerization scripts (the repository checked out for a development mode setup can be re-used):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/ptrxyz/chemotion.git\n")),(0,r.kt)("p",null,"The next step is to modify the file ",(0,r.kt)("inlineCode",{parentName:"p"},"~/chemotion/build-chemotion/rebuild.sh"),". Any reference to ",(0,r.kt)("inlineCode",{parentName:"p"},"ptrxyz/chemotion")," must be updated. In this guide, all occurences are changed to ",(0,r.kt)("inlineCode",{parentName:"p"},"user1/chemotion"),". "),(0,r.kt)("p",null,"The setup continues with the following steps:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ~/chemotion/build-chemotion\ngit clone https://github.com/ComPlat/chemotion_ELN.git src\n./rebuild.sh\n")),(0,r.kt)("p",null,"Depending on the power of you machine, this will take some time, as some packages will be compiled from source code. In the end, the production mode image should be ready. Check it with ",(0,r.kt)("inlineCode",{parentName:"p"},"docker images"),"; the command should display an image tagged ",(0,r.kt)("inlineCode",{parentName:"p"},"user1/chemotion:VERSION")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"VERSION")," being a placeholder for the exact version.\nTo start an instance of ChemotionELN, the file ",(0,r.kt)("inlineCode",{parentName:"p"},"~/chemotion/client-chemotion/docker-compose.yml")," must be updated manually to reflect the correct image name. Originally, the file references ",(0,r.kt)("inlineCode",{parentName:"p"},"ptrxyz/chemotion:VERSION")," in two places, which both must be updated to ",(0,r.kt)("inlineCode",{parentName:"p"},"user1/chemotion:VERSION"),". Please note that an update of the version field might be necessary as well. After the update, the production mode Chemotion_ELN can be started with the following commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ~/chemotion/client-chemotion\nmkdir -p shared db-data\ndocker-compose run eln init\ndocker container prune\ndocker-compose up\n")),(0,r.kt)("p",null,"The third command will prompt you to authorize a potentially destructive initialization of a fresh database by typing ",(0,r.kt)("inlineCode",{parentName:"p"},"continue"),". The fourth command will prompt prior to the removal of stopped containers. For a real production mode environment additional steps would be required (e.g. setup of a HTTP proxy), which is beyond the scope of this guide."))}u.isMDXComponent=!0}}]);