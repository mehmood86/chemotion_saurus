"use strict";(self.webpackChunkchemotion_saurus=self.webpackChunkchemotion_saurus||[]).push([[6651],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),f=i,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||s;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var c=2;c<s;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8738:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(7462),i=n(3366),s=(n(7294),n(3905)),a=["components"],o={id:"lists",title:"Lists in ELN",sidebar_label:"Lists in ELN",slug:"lists_eln"},l=void 0,c={unversionedId:"eln/lists",id:"version-1.1.0/eln/lists",title:"Lists in ELN",description:'Lists form one main organisation instrument in the ELN. All entities that are generated, such as the main entities "sample", "reaction", "research plan", "wellplate" and "screens", are visible in the list generated for this entit-type.',source:"@site/versioned_docs/version-1.1.0/eln/lists.mdx",sourceDirName:"eln",slug:"/eln/lists_eln",permalink:"/chemotionsaurus/docs/1.1.0/eln/lists_eln",editUrl:"https://github.com/ComPlat/chemotion_saurus/edit/master/versioned_docs/version-1.1.0/eln/lists.mdx",tags:[],version:"1.1.0",lastUpdatedBy:"Danny Truong",lastUpdatedAt:1649919296,formattedLastUpdatedAt:"4/14/2022",frontMatter:{id:"lists",title:"Lists in ELN",sidebar_label:"Lists in ELN",slug:"lists_eln"},sidebar:"version-1.1.0/elnSidebar",previous:{title:"Collections",permalink:"/chemotionsaurus/docs/1.1.0/eln/collections"},next:{title:"Samples",permalink:"/chemotionsaurus/docs/1.1.0/eln/samples"}},u=[{value:"Lists for samples",id:"lists-for-samples",children:[{value:"Sorting of the samples list",id:"sorting-of-the-samples-list",children:[],level:3}],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,s.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,'Lists form one main organisation instrument in the ELN. All entities that are generated, such as the main entities "sample", "reaction", "research plan", "wellplate" and "screens", are visible in the list generated for this entit-type.\nNew entity-types that are generated via the "generic elements" function are also listed in the entities\' list. Lists are helpful to keep oveview over all generated items and they may alo help to organize information on the entities. Lists can be automatically structured according identifiers, if available.\nCurrently automated structuring of lists is only enabled for samples with structures. '),(0,s.kt)("h2",{id:"lists-for-samples"},"Lists for samples"),(0,s.kt)("p",null,"Lists for samples are sorted according to the InChIKey of the added samples. Each new InCHIKey induces the generation of a new molecule drawing (grey area in the sample list), that is followed by a white area referring the sample. If there are several samples with the samle molecular structure, they are all sorted under one molecule area. For the generation of the molecules image, the ELN uses the Molefile of the latest edited sample.\nThus, the image representing the molecule (and therewith the samples) changes if the Molefile of the latest edited sample is changed. "),(0,s.kt)("p",null,"The list of samples contains further information"),(0,s.kt)("h3",{id:"sorting-of-the-samples-list"},"Sorting of the samples list"),(0,s.kt)("p",null,"Sorting can be done by filtering according to a date, filtering the lists using structure search or text search. To be continued.."))}m.isMDXComponent=!0}}]);