"use strict";(self.webpackChunkchemotion_saurus=self.webpackChunkchemotion_saurus||[]).push([[822],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),g=i,m=d["".concat(s,".").concat(g)]||d[g]||u[g]||a;return t?r.createElement(m,o(o({ref:n},c),{},{components:t})):r.createElement(m,o({ref:n},c))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={id:"linting",title:"Linting",sidebar_label:"Linting",slug:"linting"},o=void 0,l={unversionedId:"eln/development/linting",id:"eln/development/linting",title:"Linting",description:"Linting",source:"@site/docs/eln/development/linting.mdx",sourceDirName:"eln/development",slug:"/eln/development/linting",permalink:"/chemotionsaurus/docs/eln/development/linting",draft:!1,editUrl:"https://github.com/ComPlat/chemotion_saurus/edit/master/docs/eln/development/linting.mdx",tags:[],version:"current",lastUpdatedBy:"Danny Truong",lastUpdatedAt:1663309693,formattedLastUpdatedAt:"Sep 16, 2022",frontMatter:{id:"linting",title:"Linting",sidebar_label:"Linting",slug:"linting"},sidebar:"elnSidebar",previous:{title:"Debugging",permalink:"/chemotionsaurus/docs/eln/development/debugging"},next:{title:"Testing",permalink:"/chemotionsaurus/docs/eln/development/testing"}},s={},p=[{value:"Linting",id:"linting",level:2}],c={toc:p};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"linting"},"Linting"),(0,i.kt)("p",null,"For linting and formatting Ruby and JavaScript, ",(0,i.kt)("a",{parentName:"p",href:"https://rubocop.org/"},"RuboCop")," and ",(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESLint")," are used respectively.\nThey can be used with the following commands from the inside of a Chemotion ELN installation directory.\nThe flags ",(0,i.kt)("inlineCode",{parentName:"p"},"-a")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"-x")," for rubocop and ",(0,i.kt)("inlineCode",{parentName:"p"},"--fix")," for ESLint are for correcting and therefore changing the code.\nWithout the flags errors or warnings are displayed, but no changes are made to the code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"rubocop [-a | -x] [paths]\nyarn run eslint [--fix] [paths]\n")),(0,i.kt)("p",null,"When ESLint detects linting errors, it will finishes by default with the exit code 1.\nThis can lead to scripts being terminated with error codes in some environments (e. g. GitHub Actions).\nTo avoid this the ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/eslint-plugin-only-warn"},"eslint-plugin-only-warn")," can be added via yarn which returns warnings instead of errors.\nThe plugin needs to be activated with a flag in the ESLint command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"yarn run eslint --plugin eslint-plugin-only-warn [--fix] [paths]\n")),(0,i.kt)("p",null,"There are ",(0,i.kt)("a",{parentName:"p",href:"#visual-studio-code"},"Linting extensions for Visual Studio Code")," available."))}u.isMDXComponent=!0}}]);